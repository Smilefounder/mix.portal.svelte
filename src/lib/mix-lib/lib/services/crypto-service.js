import * as CryptoJS from 'crypto-ts';
export class CryptoService {
    size = 256;
    encryptAES(message, iCompleteEncodedKey) {
        const aesKeys = new AESKey(iCompleteEncodedKey);
        const options = {
            iv: aesKeys.iv,
            keySize: this.size / 8,
            mode: CryptoJS.mode.CBC,
            padding: CryptoJS.pad.PKCS7,
        };
        return CryptoJS.AES.encrypt(message, aesKeys.key, options).toString();
    }
    decryptAES(ciphertext, iCompleteEncodedKey) {
        const aesKeys = new AESKey(iCompleteEncodedKey);
        const options = {
            iv: aesKeys.iv,
            keySize: this.size / 8,
            mode: CryptoJS.mode.CBC,
            padding: CryptoJS.pad.PKCS7,
        };
        const decrypted = CryptoJS.AES.decrypt(ciphertext, aesKeys.key, options);
        return decrypted.toString(CryptoJS.enc.Utf8);
    }
}
export class AESKey {
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    iv;
    key;
    /**
     *
     */
    constructor(encryptedKeys) {
        const base64 = atob(encryptedKeys);
        const keyStrings = base64.split(',');
        this.iv = keyStrings[0];
        this.key = keyStrings[1];
    }
}
export const cryptoService = new CryptoService();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3J5cHRvLXNlcnZpY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvbGliL3NlcnZpY2VzL2NyeXB0by1zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sS0FBSyxRQUFRLE1BQU0sV0FBVyxDQUFDO0FBQ3RDLE1BQU0sT0FBTyxhQUFhO0lBQ2pCLElBQUksR0FBRyxHQUFHLENBQUM7SUFDWCxVQUFVLENBQUMsT0FBZSxFQUFFLG1CQUEyQjtRQUM1RCxNQUFNLE9BQU8sR0FBRyxJQUFJLE1BQU0sQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDO1FBQ2hELE1BQU0sT0FBTyxHQUFHO1lBQ2QsRUFBRSxFQUFFLE9BQU8sQ0FBQyxFQUFFO1lBQ2QsT0FBTyxFQUFFLElBQUksQ0FBQyxJQUFJLEdBQUcsQ0FBQztZQUN0QixJQUFJLEVBQUUsUUFBUSxDQUFDLElBQUksQ0FBQyxHQUFHO1lBQ3ZCLE9BQU8sRUFBRSxRQUFRLENBQUMsR0FBRyxDQUFDLEtBQUs7U0FDNUIsQ0FBQztRQUNGLE9BQU8sUUFBUSxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsT0FBTyxFQUFFLE9BQU8sQ0FBQyxHQUFHLEVBQUUsT0FBTyxDQUFDLENBQUMsUUFBUSxFQUFFLENBQUM7SUFDeEUsQ0FBQztJQUNNLFVBQVUsQ0FBQyxVQUFrQixFQUFFLG1CQUEyQjtRQUMvRCxNQUFNLE9BQU8sR0FBRyxJQUFJLE1BQU0sQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDO1FBQ2hELE1BQU0sT0FBTyxHQUFHO1lBQ2QsRUFBRSxFQUFFLE9BQU8sQ0FBQyxFQUFFO1lBQ2QsT0FBTyxFQUFFLElBQUksQ0FBQyxJQUFJLEdBQUcsQ0FBQztZQUN0QixJQUFJLEVBQUUsUUFBUSxDQUFDLElBQUksQ0FBQyxHQUFHO1lBQ3ZCLE9BQU8sRUFBRSxRQUFRLENBQUMsR0FBRyxDQUFDLEtBQUs7U0FDNUIsQ0FBQztRQUNGLE1BQU0sU0FBUyxHQUFHLFFBQVEsQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLFVBQVUsRUFBRSxPQUFPLENBQUMsR0FBRyxFQUFFLE9BQU8sQ0FBQyxDQUFDO1FBQ3pFLE9BQU8sU0FBUyxDQUFDLFFBQVEsQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQy9DLENBQUM7Q0FDRjtBQUVELE1BQU0sT0FBTyxNQUFNO0lBQ2pCLDhEQUE4RDtJQUN2RCxFQUFFLENBQU87SUFDVCxHQUFHLENBQVM7SUFDbkI7O09BRUc7SUFDSCxZQUFZLGFBQXFCO1FBQy9CLE1BQU0sTUFBTSxHQUFHLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQztRQUNuQyxNQUFNLFVBQVUsR0FBRyxNQUFNLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ3JDLElBQUksQ0FBQyxFQUFFLEdBQUcsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ3hCLElBQUksQ0FBQyxHQUFHLEdBQUcsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzNCLENBQUM7Q0FDRjtBQUVELE1BQU0sQ0FBQyxNQUFNLGFBQWEsR0FBRyxJQUFJLGFBQWEsRUFBRSxDQUFDIn0=